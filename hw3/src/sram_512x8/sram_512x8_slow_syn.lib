/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS SRAM Generator
 *           			TSMC CL013G-FSG Process
 *      version:		2003Q4V1
 *      comment:		
 *      configuration:	 -instname "sram_512x8" -words 512 -bits 8 -frequency 100 -ring_width 2 -mux 8 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met8 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux -libname "sram_512x8"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sram_512x8
 *      Instance Name:  sram_512x8
 *      Words:          512
 *      Word Width:     8
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2013-03-05 06:46:17Z
 *      Version:        2003Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sram_512x8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-03-05 06:46:17Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(slow) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : slow;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(sram_512x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_512x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_512x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(sram_512x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (sram_512x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (sram_512x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 9;
		bit_from : 8;
		bit_to : 0 ;
		downto : true ;
	}
cell(sram_512x8) {
	area		 : 30947.886;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 9;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : sram_512x8_DATA;
		direction : output;
		max_capacitance : 0.600;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(sram_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "1.996, 2.017, 2.038, 2.081, 2.197, 2.388, 2.631", \
			  "2.006, 2.027, 2.048, 2.091, 2.207, 2.398, 2.641", \
			  "2.018, 2.040, 2.061, 2.103, 2.220, 2.410, 2.654", \
			  "2.043, 2.065, 2.086, 2.128, 2.245, 2.435, 2.679", \
			  "2.119, 2.140, 2.161, 2.203, 2.320, 2.511, 2.754", \
			  "2.244, 2.265, 2.287, 2.329, 2.445, 2.636, 2.880", \
			  "2.370, 2.391, 2.412, 2.454, 2.571, 2.762, 3.005" \
			)
			}
			rise_transition(sram_512x8_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.071, 0.114, 0.158, 0.245, 0.484, 0.876, 1.376")
			}
			cell_fall(sram_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "2.098, 2.114, 2.130, 2.162, 2.249, 2.392, 2.574", \
			  "2.108, 2.124, 2.140, 2.172, 2.259, 2.402, 2.584", \
			  "2.121, 2.137, 2.153, 2.184, 2.271, 2.414, 2.596", \
			  "2.146, 2.162, 2.178, 2.209, 2.297, 2.439, 2.622", \
			  "2.221, 2.237, 2.253, 2.285, 2.372, 2.514, 2.697", \
			  "2.347, 2.363, 2.378, 2.410, 2.497, 2.640, 2.822", \
			  "2.472, 2.488, 2.504, 2.536, 2.623, 2.765, 2.948" \
			)
			}
			fall_transition(sram_512x8_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.080, 0.107, 0.133, 0.186, 0.332, 0.571, 0.876")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.151
		clock	: true;
		min_pulse_width_low	: 0.289;
		min_pulse_width_high	: 0.097;
		min_period		: 2.213;
		max_transition		: 1.500;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(sram_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("13.009, 13.009")
        		}
        		fall_power(sram_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(sram_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("15.156, 15.156")
			}	
			fall_power(sram_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(sram_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.027, 0.027")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.006;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.676, 0.680, 0.685, 0.695, 0.726, 0.778, 0.830", \
			  "0.666, 0.670, 0.675, 0.685, 0.716, 0.768, 0.819", \
			  "0.653, 0.657, 0.663, 0.673, 0.704, 0.755, 0.807", \
			  "0.628, 0.632, 0.638, 0.648, 0.679, 0.730, 0.782", \
			  "0.553, 0.557, 0.562, 0.573, 0.603, 0.655, 0.707", \
			  "0.428, 0.432, 0.437, 0.447, 0.478, 0.530, 0.581", \
			  "0.302, 0.306, 0.311, 0.322, 0.353, 0.404, 0.456" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.475, 0.483, 0.493, 0.513, 0.573, 0.673, 0.773", \
			  "0.465, 0.473, 0.483, 0.503, 0.563, 0.663, 0.763", \
			  "0.452, 0.460, 0.470, 0.490, 0.550, 0.650, 0.750", \
			  "0.427, 0.435, 0.445, 0.465, 0.525, 0.625, 0.725", \
			  "0.352, 0.360, 0.370, 0.390, 0.450, 0.550, 0.650", \
			  "0.226, 0.234, 0.244, 0.264, 0.324, 0.424, 0.524", \
			  "0.101, 0.109, 0.119, 0.139, 0.199, 0.299, 0.399" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.128, 0.124, 0.119, 0.108, 0.078, 0.026, 0.000", \
			  "0.253, 0.249, 0.244, 0.234, 0.203, 0.151, 0.100" \
			)
				
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.092, 0.084, 0.074, 0.054, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.492, 0.498, 0.506, 0.521, 0.565, 0.640, 0.714", \
			  "0.482, 0.488, 0.496, 0.511, 0.555, 0.630, 0.704", \
			  "0.470, 0.476, 0.483, 0.498, 0.543, 0.617, 0.692", \
			  "0.445, 0.451, 0.458, 0.473, 0.518, 0.592, 0.667", \
			  "0.370, 0.376, 0.383, 0.398, 0.443, 0.517, 0.591", \
			  "0.244, 0.250, 0.258, 0.272, 0.317, 0.392, 0.466", \
			  "0.119, 0.125, 0.132, 0.147, 0.192, 0.266, 0.341" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.616, 0.625, 0.636, 0.658, 0.726, 0.838, 0.950", \
			  "0.606, 0.615, 0.626, 0.648, 0.716, 0.828, 0.940", \
			  "0.593, 0.602, 0.613, 0.636, 0.703, 0.815, 0.928", \
			  "0.568, 0.577, 0.588, 0.611, 0.678, 0.790, 0.903", \
			  "0.493, 0.502, 0.513, 0.536, 0.603, 0.715, 0.827", \
			  "0.367, 0.376, 0.388, 0.410, 0.477, 0.590, 0.702", \
			  "0.242, 0.251, 0.262, 0.285, 0.352, 0.464, 0.576" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : sram_512x8_ADDRESS;
		direction : input;
		capacitance : 0.017;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.547, 0.549, 0.553, 0.559, 0.579, 0.612, 0.644", \
			  "0.537, 0.539, 0.543, 0.549, 0.569, 0.602, 0.634", \
			  "0.524, 0.527, 0.530, 0.537, 0.556, 0.589, 0.622", \
			  "0.499, 0.502, 0.505, 0.512, 0.531, 0.564, 0.597", \
			  "0.424, 0.427, 0.430, 0.436, 0.456, 0.489, 0.521", \
			  "0.298, 0.301, 0.304, 0.311, 0.331, 0.363, 0.396", \
			  "0.173, 0.176, 0.179, 0.185, 0.205, 0.238, 0.270" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.344, 0.349, 0.356, 0.369, 0.408, 0.474, 0.539", \
			  "0.334, 0.339, 0.346, 0.359, 0.398, 0.464, 0.529", \
			  "0.321, 0.327, 0.333, 0.346, 0.386, 0.451, 0.517", \
			  "0.296, 0.302, 0.308, 0.321, 0.361, 0.426, 0.492", \
			  "0.221, 0.226, 0.233, 0.246, 0.285, 0.351, 0.416", \
			  "0.096, 0.101, 0.107, 0.121, 0.160, 0.225, 0.291", \
			  "-0.030, -0.025, -0.018, -0.005, 0.034, 0.100, 0.165" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.052, 0.049, 0.046, 0.039, 0.020, 0.000, 0.000", \
			  "0.177, 0.175, 0.171, 0.165, 0.145, 0.113, 0.080", \
			  "0.303, 0.300, 0.297, 0.290, 0.271, 0.238, 0.205" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.054, 0.048, 0.042, 0.029, 0.000, 0.000, 0.000", \
			  "0.179, 0.174, 0.167, 0.154, 0.115, 0.049, 0.000", \
			  "0.305, 0.299, 0.293, 0.280, 0.240, 0.175, 0.109" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(sram_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.218, 0.218")
                 }
         }

}
	bus(D)	 {
		bus_type : sram_512x8_DATA;
		direction : input;
		capacitance : 0.001;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.406, 0.407, 0.408, 0.411, 0.421, 0.436, 0.451", \
			  "0.396, 0.397, 0.398, 0.401, 0.411, 0.426, 0.441", \
			  "0.383, 0.384, 0.386, 0.389, 0.398, 0.413, 0.428", \
			  "0.358, 0.359, 0.361, 0.364, 0.373, 0.388, 0.403", \
			  "0.283, 0.284, 0.286, 0.289, 0.298, 0.313, 0.328", \
			  "0.157, 0.159, 0.160, 0.163, 0.172, 0.187, 0.202", \
			  "0.032, 0.033, 0.035, 0.038, 0.047, 0.062, 0.077" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.288, 0.298, 0.311, 0.337, 0.415, 0.546, 0.676", \
			  "0.278, 0.288, 0.301, 0.327, 0.405, 0.536, 0.666", \
			  "0.265, 0.275, 0.288, 0.315, 0.393, 0.523, 0.653", \
			  "0.240, 0.250, 0.263, 0.289, 0.368, 0.498, 0.628", \
			  "0.165, 0.175, 0.188, 0.214, 0.292, 0.423, 0.553", \
			  "0.039, 0.050, 0.063, 0.089, 0.167, 0.297, 0.428", \
			  "-0.086, -0.076, -0.063, -0.037, 0.042, 0.172, 0.302" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.057, 0.056, 0.053, 0.044, 0.029, 0.014" \
			)
			}
			fall_constraint(sram_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.127, 0.117, 0.103, 0.077, 0.000, 0.000, 0.000", \
			  "0.252, 0.242, 0.229, 0.203, 0.125, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.014;
  }
}
