/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2013 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS SRAM Generator
 *           			TSMC CL013G-FSG Process
 *      version:		2003Q4V1
 *      comment:		
 *      configuration:	 -instname "sram_4096x8" -words 4096 -bits 8 -frequency 100 -ring_width 2 -mux 32 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met8 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux -libname "sram_4096x8"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sram_4096x8
 *      Instance Name:  sram_4096x8
 *      Words:          4096
 *      Word Width:     8
 *      Mux:            32
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2013-04-02 11:15:05Z
 *      Version:        2003Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sram_4096x8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2013-04-02 11:15:05Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2013 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(slow) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : slow;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(sram_4096x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_4096x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_4096x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(sram_4096x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (sram_4096x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (sram_4096x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 12;
		bit_from : 11;
		bit_to : 0 ;
		downto : true ;
	}
cell(sram_4096x8) {
	area		 : 131906.974;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 12;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : sram_4096x8_DATA;
		direction : output;
		max_capacitance : 0.600;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(sram_4096x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "2.540, 2.562, 2.583, 2.625, 2.742, 2.932, 3.176", \
			  "2.550, 2.571, 2.593, 2.635, 2.752, 2.942, 3.186", \
			  "2.563, 2.584, 2.605, 2.647, 2.764, 2.955, 3.198", \
			  "2.588, 2.609, 2.630, 2.672, 2.789, 2.980, 3.223", \
			  "2.662, 2.683, 2.705, 2.747, 2.864, 3.054, 3.298", \
			  "2.787, 2.808, 2.829, 2.871, 2.988, 3.179, 3.422", \
			  "2.911, 2.932, 2.953, 2.996, 3.112, 3.303, 3.547" \
			)
			}
			rise_transition(sram_4096x8_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.071, 0.114, 0.158, 0.245, 0.484, 0.876, 1.376")
			}
			cell_fall(sram_4096x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "2.605, 2.621, 2.637, 2.669, 2.756, 2.898, 3.081", \
			  "2.615, 2.631, 2.647, 2.678, 2.766, 2.908, 3.091", \
			  "2.628, 2.643, 2.659, 2.691, 2.778, 2.921, 3.103", \
			  "2.652, 2.668, 2.684, 2.716, 2.803, 2.946, 3.128", \
			  "2.727, 2.743, 2.759, 2.790, 2.878, 3.020, 3.203", \
			  "2.851, 2.867, 2.883, 2.915, 3.002, 3.145, 3.327", \
			  "2.976, 2.992, 3.008, 3.039, 3.126, 3.269, 3.451" \
			)
			}
			fall_transition(sram_4096x8_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.080, 0.107, 0.133, 0.186, 0.332, 0.571, 0.876")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.149
		clock	: true;
		min_pulse_width_low	: 0.289;
		min_pulse_width_high	: 0.097;
		min_period		: 2.628;
		max_transition		: 1.500;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(sram_4096x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("31.788, 31.788")
        		}
        		fall_power(sram_4096x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(sram_4096x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("45.815, 45.815")
			}	
			fall_power(sram_4096x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(sram_4096x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.028, 0.028")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.006;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.676, 0.680, 0.685, 0.695, 0.726, 0.778, 0.829", \
			  "0.666, 0.670, 0.675, 0.685, 0.716, 0.768, 0.819", \
			  "0.653, 0.657, 0.662, 0.673, 0.704, 0.755, 0.807", \
			  "0.628, 0.632, 0.638, 0.648, 0.679, 0.730, 0.782", \
			  "0.554, 0.558, 0.563, 0.573, 0.604, 0.656, 0.707", \
			  "0.429, 0.433, 0.439, 0.449, 0.480, 0.531, 0.583", \
			  "0.305, 0.309, 0.314, 0.324, 0.355, 0.407, 0.458" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.473, 0.481, 0.491, 0.511, 0.571, 0.671, 0.771", \
			  "0.463, 0.471, 0.481, 0.501, 0.561, 0.661, 0.761", \
			  "0.450, 0.458, 0.468, 0.488, 0.548, 0.648, 0.748", \
			  "0.426, 0.434, 0.444, 0.464, 0.524, 0.624, 0.724", \
			  "0.351, 0.359, 0.369, 0.389, 0.449, 0.549, 0.649", \
			  "0.227, 0.235, 0.245, 0.265, 0.325, 0.425, 0.525", \
			  "0.102, 0.110, 0.120, 0.140, 0.200, 0.300, 0.400" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.122, 0.117, 0.107, 0.076, 0.024, 0.000", \
			  "0.251, 0.246, 0.241, 0.231, 0.200, 0.149, 0.097" \
			)
				
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.089, 0.081, 0.071, 0.051, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.486, 0.492, 0.499, 0.514, 0.559, 0.633, 0.708", \
			  "0.476, 0.482, 0.489, 0.504, 0.549, 0.623, 0.698", \
			  "0.463, 0.469, 0.477, 0.492, 0.536, 0.611, 0.685", \
			  "0.438, 0.444, 0.452, 0.467, 0.511, 0.586, 0.660", \
			  "0.364, 0.370, 0.377, 0.392, 0.437, 0.511, 0.586", \
			  "0.239, 0.245, 0.253, 0.268, 0.312, 0.387, 0.461", \
			  "0.115, 0.121, 0.128, 0.143, 0.188, 0.262, 0.337" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.612, 0.621, 0.633, 0.655, 0.722, 0.835, 0.947", \
			  "0.602, 0.611, 0.623, 0.645, 0.712, 0.825, 0.937", \
			  "0.590, 0.599, 0.610, 0.633, 0.700, 0.812, 0.924", \
			  "0.565, 0.574, 0.585, 0.608, 0.675, 0.787, 0.899", \
			  "0.490, 0.499, 0.511, 0.533, 0.600, 0.713, 0.825", \
			  "0.366, 0.375, 0.386, 0.409, 0.476, 0.588, 0.700", \
			  "0.242, 0.251, 0.262, 0.284, 0.352, 0.464, 0.576" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : sram_4096x8_ADDRESS;
		direction : input;
		capacitance : 0.017;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.577, 0.580, 0.583, 0.590, 0.609, 0.642, 0.675", \
			  "0.567, 0.570, 0.573, 0.580, 0.599, 0.632, 0.665", \
			  "0.555, 0.557, 0.561, 0.567, 0.587, 0.620, 0.652", \
			  "0.530, 0.533, 0.536, 0.542, 0.562, 0.595, 0.627", \
			  "0.455, 0.458, 0.461, 0.468, 0.487, 0.520, 0.553", \
			  "0.331, 0.334, 0.337, 0.343, 0.363, 0.396, 0.428", \
			  "0.207, 0.209, 0.212, 0.219, 0.239, 0.271, 0.304" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.352, 0.358, 0.364, 0.377, 0.417, 0.482, 0.548", \
			  "0.343, 0.348, 0.354, 0.367, 0.407, 0.472, 0.538", \
			  "0.330, 0.335, 0.342, 0.355, 0.394, 0.460, 0.525", \
			  "0.305, 0.310, 0.317, 0.330, 0.369, 0.435, 0.500", \
			  "0.231, 0.236, 0.242, 0.255, 0.295, 0.360, 0.426", \
			  "0.106, 0.111, 0.118, 0.131, 0.170, 0.236, 0.301", \
			  "-0.018, -0.013, -0.006, 0.007, 0.046, 0.111, 0.177" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.080, 0.078, 0.074, 0.068, 0.048, 0.015, 0.000", \
			  "0.205, 0.202, 0.199, 0.192, 0.173, 0.140, 0.107", \
			  "0.329, 0.326, 0.323, 0.317, 0.297, 0.264, 0.232" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.075, 0.070, 0.063, 0.050, 0.011, 0.000, 0.000", \
			  "0.199, 0.194, 0.188, 0.175, 0.135, 0.070, 0.004", \
			  "0.324, 0.319, 0.312, 0.299, 0.260, 0.194, 0.129" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(sram_4096x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.216, 0.216")
                 }
         }

}
	bus(D)	 {
		bus_type : sram_4096x8_DATA;
		direction : input;
		capacitance : 0.001;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.405, 0.406, 0.407, 0.410, 0.420, 0.435, 0.450", \
			  "0.395, 0.396, 0.397, 0.400, 0.410, 0.425, 0.440", \
			  "0.382, 0.384, 0.385, 0.388, 0.397, 0.412, 0.427", \
			  "0.357, 0.359, 0.360, 0.363, 0.372, 0.387, 0.403", \
			  "0.283, 0.284, 0.286, 0.289, 0.298, 0.313, 0.328", \
			  "0.158, 0.160, 0.161, 0.164, 0.173, 0.188, 0.203", \
			  "0.034, 0.035, 0.037, 0.040, 0.049, 0.064, 0.079" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.271, 0.281, 0.294, 0.320, 0.399, 0.529, 0.659", \
			  "0.261, 0.271, 0.284, 0.310, 0.389, 0.519, 0.649", \
			  "0.248, 0.259, 0.272, 0.298, 0.376, 0.506, 0.637", \
			  "0.224, 0.234, 0.247, 0.273, 0.351, 0.482, 0.612", \
			  "0.149, 0.159, 0.172, 0.198, 0.277, 0.407, 0.537", \
			  "0.025, 0.035, 0.048, 0.074, 0.152, 0.283, 0.413", \
			  "-0.100, -0.089, -0.076, -0.050, 0.028, 0.158, 0.288" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.067, 0.066, 0.064, 0.061, 0.052, 0.037, 0.022" \
			)
			}
			fall_constraint(sram_4096x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.022, 0.011, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.146, 0.136, 0.123, 0.097, 0.019, 0.000, 0.000", \
			  "0.271, 0.260, 0.247, 0.221, 0.143, 0.013, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.037;
  }
}
